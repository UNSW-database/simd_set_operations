
[algorithm_sets]
scalar_kset = [
    # "adaptive",
    "small_adaptive",
    "branchless_merge",
    "galloping",
    "binary_search",
    "baezayates",
]
vector_kset = [
    # "adaptive",
    "small_adaptive",
    "branchless_merge",
    "galloping", "galloping_sse", "galloping_avx2", "galloping_avx512",
    # "baezayates",

    "shuffling_sse", "shuffling_avx2", "shuffling_avx512",
    "broadcast_sse", "broadcast_avx2", "broadcast_avx512",
    "shuffling_sse_bsr", "shuffling_avx2_bsr", "shuffling_avx512_bsr",
    "broadcast_sse_bsr", "broadcast_avx2_bsr", "broadcast_avx512_bsr",
    "bmiss", "bmiss_sttni", 
    "qfilter",
    "vp2intersect_emulation", "conflict_intersect",
    "croaring", "croaring_opt", "roaringrs",
    "fesia32_sse_16.0", "fesia32_avx2_16.0", "fesia32_avx512_16.0",
    "fesia_hash16_64.0"
]

compare_shuffling_sse = [ "shuffling_sse_lut", "shuffling_sse_comp", "shuffling_sse_br_lut", "shuffling_sse_br_comp" ]
compare_shuffling_avx2 = [ "shuffling_avx2_lut", "shuffling_avx2_comp", "shuffling_avx2_br_lut", "shuffling_avx2_br_comp" ]
compare_shuffling_avx512 = [ "shuffling_avx512_lut", "shuffling_avx512_comp", "shuffling_avx512_br_lut", "shuffling_avx512_br_comp" ]
compare_broadcast_sse = [ "broadcast_sse_lut", "broadcast_sse_comp", "broadcast_sse_br_lut", "broadcast_sse_br_comp" ]
compare_broadcast_avx2 = [ "broadcast_avx2_lut", "broadcast_avx2_comp", "broadcast_avx2_br_lut", "broadcast_avx2_br_comp" ]
compare_broadcast_avx512 = [ "broadcast_avx512_lut", "broadcast_avx512_comp", "broadcast_avx512_br_lut", "broadcast_avx512_br_comp" ]
compare_bmiss = [ "bmiss_lut", "bmiss_comp", "bmiss_br_lut", "bmiss_br_comp" ]
compare_bmiss_sttni = [ "bmiss_sttni_lut", "bmiss_sttni_comp", "bmiss_sttni_br_lut", "bmiss_sttni_br_comp" ]
compare_qfilter = [ "qfilter_lut", "qfilter_comp", "qfilter_br_lut", "qfilter_br_comp" ]
compare_vp2intersect_emulation = [ "vp2intersect_emulation_lut", "vp2intersect_emulation_comp", "vp2intersect_emulation_br_lut", "vp2intersect_emulation_br_comp" ]

## EXPERIMENTS ##

# Vary selectivity
[[experiment]]
name = "scalar_2set_vary_selectivity"
title = "Scalar 2-set varying selectivity"
dataset = "2set_vary_selectivity"
algorithms = [
    "naive_merge", "branchless_merge",
    "bmiss_scalar_3x", "bmiss_scalar_4x",
]

[[experiment]]
name = "compare_shuffling_sse"
dataset = "2set_vary_size"
algorithm_set = "compare_shuffling_sse"
    
[[experiment]]
name = "compare_shuffling_sse"
dataset = "2set_vary_selectivity"
algorithm_set = "compare_shuffling_sse"
    
[[experiment]]
name = "compare_shuffling_avx2"
dataset = "2set_vary_size"
algorithm_set = "compare_shuffling_avx2"
    
[[experiment]]
name = "compare_shuffling_avx2"
dataset = "2set_vary_selectivity"
algorithm_set = "compare_shuffling_avx2"
    
[[experiment]]
name = "compare_shuffling_avx512"
dataset = "2set_vary_size"
algorithm_set = "compare_shuffling_avx512"
    
[[experiment]]
name = "compare_shuffling_avx512"
dataset = "2set_vary_selectivity"
algorithm_set = "compare_shuffling_avx512"
    
[[experiment]]
name = "compare_broadcast_sse"
dataset = "2set_vary_size"
algorithm_set = "compare_broadcast_sse"
    
[[experiment]]
name = "compare_broadcast_sse"
dataset = "2set_vary_selectivity"
algorithm_set = "compare_broadcast_sse"
    
[[experiment]]
name = "compare_broadcast_avx2"
dataset = "2set_vary_size"
algorithm_set = "compare_broadcast_avx2"
    
[[experiment]]
name = "compare_broadcast_avx2"
dataset = "2set_vary_selectivity"
algorithm_set = "compare_broadcast_avx2"
    
[[experiment]]
name = "compare_broadcast_avx512"
dataset = "2set_vary_size"
algorithm_set = "compare_broadcast_avx512"
    
[[experiment]]
name = "compare_broadcast_avx512"
dataset = "2set_vary_selectivity"
algorithm_set = "compare_broadcast_avx512"
    
[[experiment]]
name = "compare_bmiss"
dataset = "2set_vary_size"
algorithm_set = "compare_bmiss"
    
[[experiment]]
name = "compare_bmiss"
dataset = "2set_vary_selectivity"
algorithm_set = "compare_bmiss"
    
[[experiment]]
name = "compare_bmiss_sttni"
dataset = "2set_vary_size"
algorithm_set = "compare_bmiss_sttni"
    
[[experiment]]
name = "compare_bmiss_sttni"
dataset = "2set_vary_selectivity"
algorithm_set = "compare_bmiss_sttni"
    
[[experiment]]
name = "compare_qfilter"
dataset = "2set_vary_size"
algorithm_set = "compare_qfilter"
    
[[experiment]]
name = "compare_qfilter"
dataset = "2set_vary_selectivity"
algorithm_set = "compare_qfilter"
    
[[experiment]]
name = "compare_vp2intersect_emulation"
dataset = "2set_vary_size"
algorithm_set = "compare_vp2intersect_emulation"
    
[[experiment]]
name = "compare_vp2intersect_emulation"
dataset = "2set_vary_selectivity"
algorithm_set = "compare_vp2intersect_emulation"

[[experiment]]
name = "2set_vary_selectivity_pc_sse"
title = "2-set array-based algorithms varying selectivity -- PC SSE"
dataset = "2set_vary_selectivity"
algorithms = [
    "branchless_merge",
    "shuffling_sse",
    "broadcast_sse",
    "bmiss",
    "bmiss_sttni",
    "qfilter",
    # keep bmiss_sttni and shuffling_sse
]

[[experiment]]
name = "2set_vary_selectivity_pc_avx2"
title = "2-set array-based algorithms varying selectivity -- PC AVX2"
dataset = "2set_vary_selectivity"
algorithms = [
    "branchless_merge",
    "shuffling_sse",
    "shuffling_avx2",
    "broadcast_avx2_br",
    "bmiss_sttni",
    # shuffling_avx2 marginally better than broadcast_avx2_br
]

[[experiment]]
name = "2set_vary_selectivity_pc_roaring"
title = "2-set array-based algorithms varying selectivity -- PC Roaring"
dataset = "2set_vary_selectivity"
algorithms = [
    "branchless_merge",
    "shuffling_avx2",
    "croaring", "croaring_opt", "roaringrs"
    # shuffling_avx2 way better
]

[[experiment]]
name = "2set_vary_selectivity_pc_roaring_md"
title = "2-set array-based algorithms varying selectivity 1% density -- PC Roaring"
dataset = "2set_vary_selectivity_moderate_density"
algorithms = [
    "branchless_merge",
    "shuffling_avx2",
    # "broadcast_avx2_br",
    "croaring", "croaring_opt", "roaringrs"
    # croaring(opt) best by far. opt is similar to non-opt
]

[[experiment]]
name = "2set_vary_selectivity_pc_fesia"
title = "2-set array-based algorithms varying selectivity -- PC FESIA"
dataset = "2set_vary_selectivity"
algorithms = [
    "branchless_merge",
    "shuffling_avx2",
    "croaring_opt",
    "fesia32_sse_16.0", "fesia32_avx2_16.0",
]

[[experiment]]
name = "2set_vary_selectivity_tods_sse"
title = "2-set array-based algorithms varying selectivity -- TODS SSE"
dataset = "2set_vary_selectivity"
algorithms = [
    "branchless_merge",
    "shuffling_sse",
    "broadcast_sse_br",
    "bmiss_br",
    "bmiss_sttni_br",
    "qfilter",
    "qfilter_c",
    # keep bmiss_sttni_br and shuffling_sse
]

[[experiment]]
name = "2set_vary_size_tods_sse"
title = "2-set array-based algorithms varying size -- TODS SSE"
dataset = "2set_vary_size"
algorithms = [
    "branchless_merge",
    "shuffling_sse",
    "broadcast_sse_br",
    "bmiss_br",
    "bmiss_sttni_br",
    "qfilter",
    "qfilter_c",
    # keep bmiss_sttni_br and shuffling_sse
]

[[experiment]]
name = "2set_vary_selectivity_tods_avx2"
title = "2-set array-based algorithms varying selectivity -- TODS AVX2"
dataset = "2set_vary_selectivity"
algorithms = [
    "branchless_merge",
    "shuffling_sse",
    "bmiss_sttni_br",
    "shuffling_avx2_br",
    "broadcast_avx2_br",
    # broadcast_avx2_br outperforms everything
]

[[experiment]]
name = "2set_vary_size_tods_avx2"
title = "2-set array-based algorithms varying size -- TODS AVX2"
dataset = "2set_vary_size"
algorithms = [
    "branchless_merge",
    "shuffling_sse",
    "bmiss_sttni_br",
    "shuffling_avx2_br",
    "broadcast_avx2_br",
    # broadcast_avx2_br outperforms everything
]

[[experiment]]
name = "2set_vary_selectivity_tods_avx512"
title = "2-set array-based algorithms varying selectivity -- TODS AVX-512"
dataset = "2set_vary_selectivity"
algorithms = [
    "branchless_merge",
    "broadcast_avx2_br",
    "shuffling_avx512_br",
    "broadcast_avx512_br",
    "vp2intersect_emulation_br",
    # broadcast_avx512_br outperforms everything
]

[[experiment]]
name = "2set_vary_size_tods_avx512"
title = "2-set array-based algorithms varying size -- TODS AVX-512"
dataset = "2set_vary_size"
algorithms = [
    "branchless_merge",
    "broadcast_avx2_br",
    "shuffling_avx512_br",
    "broadcast_avx512_br",
    "vp2intersect_emulation_br",
    # broadcast_avx512_br outperforms everything
]

[[experiment]]
name = "2set_vary_selectivity_tods_roaring"
title = "2-set array-based algorithms varying selectivity -- TODS Roaring"
dataset = "2set_vary_selectivity"
algorithms = [
    "branchless_merge",
    "broadcast_avx512_br",
    "croaring", "croaring_opt", "roaringrs"
    # broadcast_avx512_br better
]

[[experiment]]
name = "2set_vary_size_tods_roaring"
title = "2-set array-based algorithms varying size -- TODS Roaring"
dataset = "2set_vary_size"
algorithms = [
    "branchless_merge",
    "broadcast_avx512_br",
    "croaring", "croaring_opt", "roaringrs"
    # broadcast_avx512_br better
]

[[experiment]]
name = "2set_vary_selectivity_tods_roaring_md"
title = "2-set array-based algorithms varying selectivity 1% density -- TODS Roaring"
dataset = "2set_vary_selectivity_moderate_density"
algorithms = [
    "branchless_merge",
    # "shuffling_avx512_br",
    "broadcast_avx512_br",
    # "vp2intersect_emulation_br",
    "croaring", "croaring_opt", "roaringrs"
    # roaring_better
]

[[experiment]]
name = "2set_vary_selectivity_tods_fesia"
title = "2-set array-based algorithms varying selectivity -- TODS FESIA"
dataset = "2set_vary_selectivity"
algorithms = [
    "branchless_merge",
    "broadcast_avx512_br",
    "croaring_opt",
    "fesia32_sse_16.0", "fesia32_avx2_16.0", "fesia32_avx512_16.0",
]







# Vary density
[[experiment]]
name = "compare_shuffling_sse_bsr"
title = "2-set BSR algorithms varying density -- SSE"
dataset = "2set_vary_density"
algorithms = ["branchless_merge_bsr", "shuffling_sse_bsr", "shuffling_sse_bsr_br"]
# PC: branch better for >0.1
# TODS: branch better for >0.01

[[experiment]]
name = "compare_broadcast_sse_bsr"
title = "2-set BSR algorithms varying density -- SSE"
dataset = "2set_vary_density"
algorithms = ["branchless_merge_bsr", "broadcast_sse_bsr", "broadcast_sse_bsr_br"]
# PC: branch better for >0.1
# TODS: branch better for >0.01

[[experiment]]
name = "compare_qfilter_bsr"
title = "2-set BSR algorithms varying density -- SSE"
dataset = "2set_vary_density"
algorithms = ["branchless_merge_bsr", "qfilter_bsr", "qfilter_bsr_br"]
# PC: branch better for >0.1
# TODS: branch better for >0.05

[[experiment]]
name = "compare_shuffling_avx2_bsr"
title = "2-set BSR algorithms varying density -- AVX2"
dataset = "2set_vary_density"
algorithms = ["branchless_merge_bsr", "shuffling_avx2_bsr", "shuffling_avx2_bsr_br"]
# PC: branch better
# TODS: branch better

[[experiment]]
name = "compare_broadcast_avx2_bsr"
title = "2-set BSR algorithms varying density -- AVX2"
dataset = "2set_vary_density"
algorithms = ["branchless_merge_bsr", "broadcast_avx2_bsr", "broadcast_avx2_bsr_br"]
# PC: branch better
# TODS: branch better

[[experiment]]
name = "compare_shuffling_avx512_bsr"
title = "2-set BSR algorithms varying density -- AVX-512"
dataset = "2set_vary_density"
algorithms = ["branchless_merge_bsr", "shuffling_avx512_bsr", "shuffling_avx512_bsr_br"]
# TODS: branch better for low densities

[[experiment]]
name = "compare_broadcast_avx512_bsr"
title = "2-set BSR algorithms varying density -- AVX-512"
dataset = "2set_vary_density"
algorithms = ["branchless_merge_bsr", "broadcast_avx512_bsr", "broadcast_avx512_bsr_br"]
# TODS: both similar -- pick branch

# Answer q: how do these extensions translate to BSR?
# For each, put best non-BSR variant from above
[[experiment]]
name = "2set_vary_density_pc_sse"
title = "2-set BSR algorithms varying density -- PC SSE"
dataset = "2set_vary_density"
algorithms = [
    # Best in class previously: bmiss_sttni and shuffling_sse
    "bmiss_sttni", "shuffling_sse",
    "branchless_merge_bsr",
    "shuffling_sse_bsr_br",
    "broadcast_sse_bsr_br",
    "qfilter_bsr_br",
    # Eliminate qfilter_bsr_br -- shuffling and broadcast perform similarly
]

[[experiment]]
name = "2set_vary_density_pc_avx2"
title = "2-set BSR algorithms varying density -- PC AVX2"
dataset = "2set_vary_density"
algorithms = [
    # Best in class previously: shuffling_avx2
    "shuffling_avx2",
    "branchless_merge_bsr",
    "shuffling_sse_bsr_br", "shuffling_avx2_bsr_branch",
    "broadcast_sse_bsr_br", "broadcast_avx2_bsr_branch",
    # broadcast_avx2_bsr_br performs best
]

[[experiment]]
name = "2set_vary_density_pc_roaring"
title = "2-set BSR algorithms varying density -- PC Roaring"
dataset = "2set_vary_density"
algorithms = [
    "branchless_merge_bsr",
    "broadcast_avx2_bsr_br",
    "croaring", "croaring_opt", "roaringrs"
    # croaring_opt best, croaring not far behind.
    # (for densities > ~0.01)
]

[[experiment]]
name = "2set_vary_density_pc_fesia"
title = "2-set BSR algorithms varying density -- PC FESIA"
dataset = "2set_vary_density"
algorithms = [
    "branchless_merge_bsr",
    "broadcast_avx2_bsr_br",
    "croaring_opt",
    "fesia32_sse_16.0", "fesia32_avx2_16.0",
    # FESIA does not scale with density
]

[[experiment]]
name = "2set_vary_density_tods_sse"
title = "2-set BSR algorithms varying density -- TODS SSE"
dataset = "2set_vary_density"
algorithms = [
    # Best in class previously: bmiss_sttni_br and shuffling_sse
    "bmiss_sttni_br", "shuffling_sse",
    "branchless_merge_bsr",
    "shuffling_sse_bsr_br",
    "broadcast_sse_bsr_br",
    "qfilter_bsr_br",
    # shuffling and broadcast bsr best (similar) for densities >5%
]

[[experiment]]
name = "2set_vary_density_tods_avx2"
title = "2-set BSR algorithms varying density -- TODS AVX2"
dataset = "2set_vary_density"
algorithms = [
    # Best in class previously: broadcast_avx2_br
    "broadcast_avx2_br",
    "branchless_merge_bsr",
    "shuffling_sse_bsr_br", "shuffling_avx2_bsr_branch",
    "broadcast_sse_bsr_br", "broadcast_avx2_bsr_branch",
    # broadcast_avx2_bsr_br best
]

[[experiment]]
name = "2set_vary_density_tods_avx512"
title = "2-set BSR algorithms varying density -- TODS AVX-512"
dataset = "2set_vary_density"
algorithms = [
    # Best in class previously: broadcast_avx512_br
    "broadcast_avx512_br",
    "branchless_merge_bsr",
    "broadcast_avx2_bsr_br",
    "shuffling_avx512_bsr_br",
    "broadcast_avx512_bsr_br",
    # broadcast_avx2_bsr_br still best!
]

[[experiment]]
name = "2set_vary_density_tods_roaring"
title = "2-set BSR algorithms varying density -- TODS Roaring"
dataset = "2set_vary_density"
algorithms = [
    "branchless_merge_bsr",
    "broadcast_avx2_bsr_br",
    "croaring", "croaring_opt", "roaringrs"
    # croaring_opt best, croaring not far behind
    # both way better than broadcast_avx2_bsr_br
]

[[experiment]]
name = "2set_vary_density_tods_fesia"
title = "2-set BSR algorithms varying density -- TODS FESIA"
dataset = "2set_vary_density"
algorithms = [
    "branchless_merge_bsr",
    "broadcast_avx2_bsr_br",
    "croaring_opt",
    "fesia32_sse_16.0", "fesia32_avx2_16.0", "fesia32_avx512_16.0",
    # FESIA does not scale with density
]


# Skewed intersection
[[experiment]]
name = "2set_vary_skew_scalar"
title = "2-set varying skew -- scalar"
dataset = "2set_vary_skew"
algorithms = [
    "naive_merge", "branchless_merge",
    "galloping", "binary_search", "baezayates",
    "bmiss_scalar_3x", "bmiss_scalar_4x",
    # Eliminate scalar algorithms (both) (galloping better skews >1:16)
]

[[experiment]]
name = "2set_vary_skew_pc_sse"
title = "2-set varying skew -- PC SSE"
dataset = "2set_vary_skew"
algorithms = [
    "galloping", "galloping_sse",
    "shuffling_sse", "broadcast_sse",
    "bmiss", "bmiss_sttni", "qfilter",
    # Galloping SSE way faster than galloping (expected)
    # keep galloping and bmiss_sttni
]

[[experiment]]
name = "2set_vary_skew_pc_avx2"
title = "2-set varying skew -- PC AVX2"
dataset = "2set_vary_skew"
algorithms = [
    "galloping_sse", "galloping_avx2",
    "shuffling_avx2", "broadcast_avx2_br",
    "bmiss_sttni",
    # Galloping AVX2 only marginally better than SSE
]

[[experiment]]
name = "2set_vary_skew_pc_roaring"
title = "2-set varying skew -- PC Roaring"
dataset = "2set_vary_skew"
algorithms = [
    "galloping_sse", "galloping_avx2",
    "broadcast_avx2_br",
    "croaring", "croaring_opt", "roaringrs"
    # Roaring scales better than broadcast, but still no where near as good as
    # SIMD galloping.
]

[[experiment]]
name = "2set_vary_skew_pc_roaring_md"
title = "2-set varying skew -- PC Roaring 1% density"
dataset = "2set_vary_skew_md"
algorithms = [
    "galloping_sse", "galloping_avx2",
    "broadcast_avx2_br",
    "croaring", "croaring_opt", "roaringrs"
]

[[experiment]]
name = "2set_vary_skew_pc_fesia"
title = "2-set varying skew -- PC FESIA"
dataset = "2set_vary_skew"
algorithms = [
    "galloping_sse", "galloping_avx2",
    "broadcast_avx2_br",
    "fesia32_sse_16.0", "fesia32_avx2_16.0",
    "fesia_hash16_64.0",
]

[[experiment]]
name = "2set_vary_skew_tods_sse"
title = "2-set varying skew -- TODS SSE"
dataset = "2set_vary_skew"
algorithms = [
    "galloping", "galloping_sse",
    "shuffling_sse",
    "broadcast_sse_br",
    "bmiss_br",
    "bmiss_sttni_br",
    "qfilter",
    "lbk_v1x4_sse",
    "lbk_v1x8_sse",
    "lbk_v3_sse",
    # Galloping SSE way faster than galloping (expected)
    # keep galloping and bmiss_sttni_br
]

[[experiment]]
name = "2set_vary_skew_tods_avx2"
title = "2-set varying skew -- TODS AVX2"
dataset = "2set_vary_skew"
algorithms = [
    "galloping_sse", "galloping_avx2",
    "bmiss_sttni_br",
    "shuffling_avx2_br",
    "broadcast_avx2_br",
    "lbk_v1x8_avx2",
    "lbk_v1x16_avx2",
    "lbk_v3_avx2",
    # Galloping SSE and galloping AVX2 better for skews >20
    # Both perform similarly.
]

[[experiment]]
name = "2set_vary_skew_tods_avx512"
title = "2-set varying skew -- TODS AVX-512"
dataset = "2set_vary_skew"
algorithms = [
    "galloping_sse", "galloping_avx2", "galloping_avx512",
    "broadcast_avx2_br",
    "shuffling_avx512_br",
    "broadcast_avx512_br",
    "vp2intersect_emulation_br",
    "lbk_v1x16_avx512",
    "lbk_v1x32_avx512",
    "lbk_v3_avx2",
    "lbk_v3_avx512",
    # Galloping AVX-512 better for skews >1:20
    # AVX-512 marginally better until 1:128 - but within margin of error.
    # They all perform similarly due to only constant factor improvement.
    # Remove scalar algs apart from broadcast_avx512_br
]

[[experiment]]
name = "2set_vary_skew_tods_roaring"
title = "2-set varying skew -- TODS Roaring"
dataset = "2set_vary_skew"
algorithms = [
    "galloping_sse", "galloping_avx2", "galloping_avx512",
    "broadcast_avx512_br",
    "croaring", "croaring_opt", "roaringrs",
    # Roaring scales better than broadcast, but still no where near as good as
    # SIMD galloping.
]

[[experiment]]
name = "2set_vary_skew_tods_roaring_md"
title = "2-set varying skew -- TODS Roaring 1% density"
dataset = "2set_vary_skew_md"
algorithms = [
    "galloping_sse", "galloping_avx2", "galloping_avx512",
    "broadcast_avx512_br",
    "croaring", "croaring_opt", "roaringrs",
]

[[experiment]]
name = "2set_vary_skew_tods_fesia"
title = "2-set varying skew -- TODS FESIA"
dataset = "2set_vary_skew"
algorithms = [
    "galloping_sse", "galloping_avx2", "galloping_avx512",
    "broadcast_avx512_br",
    "fesia32_sse_16.0", "fesia32_avx2_16.0", "fesia32_avx512_16.0",
    "fesia_hash16_64.0"
]

# Vary density skewed
[[experiment]]
name = "2set_vary_density_skewed_array"
title = "Skewed 2-set varying density (skew 1:256) (array vs bsr)"
dataset = "2set_vary_density_skewed"
algorithms = [
    # We have already seen that galloping is best for skews of 1:256
    "galloping", "galloping_sse", "galloping_avx2", "galloping_avx512",
    "galloping_bsr", "galloping_sse_bsr", "galloping_avx2_bsr", "galloping_avx512_bsr",
]

[[experiment]]
name = "2set_vary_density_skewed"
title = "Skewed 2-set varying density (skew 1:256)"
dataset = "2set_vary_density_skewed"
algorithms = [
    "galloping_bsr", "galloping_sse_bsr", "galloping_avx2_bsr", "galloping_avx512_bsr",
    "croaring", "croaring_opt", "roaringrs",
    "fesia32_sse_16.0", "fesia8_avx16_4.0", "fesia32_avx512_16.0",
    "fesia_hash16_64.0"
]

[[experiment]]
name = "2set_vary_density_skewed_culled"
title = "Skewed 2-set varying density (skew 1:256) -- culled"
dataset = "2set_vary_density_skewed"
algorithms = [
    "galloping_bsr", "galloping_sse_bsr", "galloping_avx2_bsr", "galloping_avx512_bsr",
    "croaring", "croaring_opt", "roaringrs",
]

# FESIA
# [[experiment]]
# name = "fesia_bench"
# title = "FESIA 2-set varying selectivity"
# dataset = "2set_vary_selectivity_low"
# algorithms = [
#     "branchless_merge",
#     "shuffling_sse", "shuffling_avx2", "shuffling_avx512",
#     "broadcast_sse", "broadcast_avx2", "broadcast_avx512",
#     "vp2intersect_emulation",
#     "croaring", "croaring_opt",
#     "fesia32_sse_16.0",
#     "fesia32_avx2_16.0",
#     "fesia32_avx512_16.0",
# ]

# [[experiment]]
# name = "fesia_exp1"
# title = "FESIA 2-set varying size"
# dataset = "2set_vary_size_moderate_density"
# algorithms = [
#     "branchless_merge",
#     "shuffling_sse",
#     "galloping",
#     "simd_galloping",
#     "bmiss",
#     "fesia32_sse_16.0",
#     "fesia32_avx2_16.0",
#     "fesia16_avx512_4.0",
# ]

# [[experiment]]
# name = "fesia_sizes"
# title = "FESIA 2-set varying size moderate density"
# dataset = "2set_vary_size_moderate_density"
# algorithms = [
#     "branchless_merge",
#     "shuffling_sse", "shuffling_avx2", "shuffling_avx512",
#     "broadcast_sse", "broadcast_avx2", "broadcast_avx512",
#     "vp2intersect_emulation",
#     "croaring",
#     "fesia32_sse_16.0",
#     "fesia32_avx2_16.0",
#     "fesia32_avx512_16.0",
# ]

# FESIA ALL
[[experiment]]
name = "fesia_2set_vary_selectivity_all_sse"
title = "FESIA 2-set varying selectivity compare block size sse"
dataset = "2set_vary_selectivity_low"
algorithms = [
    "fesia8_sse_1.0", "fesia16_sse_1.0", "fesia32_sse_1.0",
    "fesia8_sse_2.0", "fesia16_sse_2.0", "fesia32_sse_2.0",
    "fesia8_sse_4.0", "fesia16_sse_4.0", "fesia32_sse_4.0",
    "fesia8_sse_8.0", "fesia16_sse_8.0", "fesia32_sse_8.0",
    "fesia8_sse_16.0", "fesia16_sse_16.0", "fesia32_sse_16.0",
    "fesia8_sse_32.0", "fesia16_sse_32.0", "fesia32_sse_32.0",
]

[[experiment]]
name = "fesia_2set_vary_selectivity_all_avx2"
title = "FESIA 2-set varying selectivity compare block size sse"
dataset = "2set_vary_selectivity_low"
algorithms = [
    "fesia8_avx2_1.0", "fesia16_avx2_1.0", "fesia32_avx2_1.0",
    "fesia8_avx2_2.0", "fesia16_avx2_2.0", "fesia32_avx2_2.0",
    "fesia8_avx2_4.0", "fesia16_avx2_4.0", "fesia32_avx2_4.0",
    "fesia8_avx2_8.0", "fesia16_avx2_8.0", "fesia32_avx2_8.0",
    "fesia8_avx2_16.0", "fesia16_avx2_16.0", "fesia32_avx2_16.0",
    "fesia8_avx2_32.0", "fesia16_avx2_32.0", "fesia32_avx2_32.0",
]

[[experiment]]
name = "fesia_2set_vary_selectivity_all_avx512"
title = "FESIA 2-set varying selectivity compare block size avx512"
dataset = "2set_vary_selectivity_low"
algorithms = [
    "fesia8_avx512_1.0", "fesia16_avx512_1.0", "fesia32_avx512_1.0",
    "fesia8_avx512_2.0", "fesia16_avx512_2.0", "fesia32_avx512_2.0",
    "fesia8_avx512_4.0", "fesia16_avx512_4.0", "fesia32_avx512_4.0",
    "fesia8_avx512_8.0", "fesia16_avx512_8.0", "fesia32_avx512_8.0",
    "fesia8_avx512_16.0", "fesia16_avx512_16.0", "fesia32_avx512_16.0",
    "fesia8_avx512_32.0", "fesia16_avx512_32.0", "fesia32_avx512_32.0",
]





# In conclusion: for high skews, performance increases steadily with hash scale.
[[experiment]]
name = "fesia_hash_vary_skew_8"
title = "fesia_hash 2-set varying skew sse"
dataset = "2set_vary_skew"
algorithms = [
    "fesia_hash8_2.0",
    "fesia_hash8_4.0",
    "fesia_hash8_8.0",
    "fesia_hash8_16.0",
    "fesia_hash8_32.0",
    "fesia_hash8_64.0",
    "fesia_hash8_128.0",
]

[[experiment]]
name = "fesia_hash_vary_skew_16"
title = "fesia_hash 2-set varying skew sse"
dataset = "2set_vary_skew"
algorithms = [
    "fesia_hash16_2.0",
    "fesia_hash16_4.0",
    "fesia_hash16_8.0",
    "fesia_hash16_16.0",
    "fesia_hash16_32.0",
    "fesia_hash16_64.0",
    "fesia_hash16_128.0",
]

[[experiment]]
name = "fesia_hash_vary_skew_32"
title = "fesia_hash 2-set varying skew sse"
dataset = "2set_vary_skew"
algorithms = [
    "fesia_hash32_2.0",
    "fesia_hash32_4.0",
    "fesia_hash32_8.0",
    "fesia_hash32_16.0",
    "fesia_hash32_32.0",
    "fesia_hash32_64.0",
    "fesia_hash32_128.0",
]

[[experiment]]
name = "fesia_hash_vary_skew"
title = "fesia_hash 2-set varying skew sse"
dataset = "2set_vary_skew"
algorithms = [
    "fesia_hash8_128.0",
    "fesia_hash16_128.0",
    "fesia_hash32_128.0",
]

# K-set intersection
# [[experiment]]
# name = "kset_same_size_scalar"
# title = "k-set same size scalar"
# dataset = "kset_same_size"
# algorithm_set = "scalar_kset"

# [[experiment]]
# name = "kset_same_size_vector"
# title = "k-set same size vector"
# dataset = "kset_same_size"
# algorithms = [
#     "small_adaptive",
#     "branchless_merge",
#     "galloping", "galloping_sse", "galloping_avx2", "galloping_avx512",
#     "shuffling_sse", "shuffling_avx2", "shuffling_avx512",
#     "bmiss", "bmiss_sttni", "broadcast_avx512",
#     "qfilter",
#     "vp2intersect_emulation", "conflict_intersect",
#     "broadcast_sse", "broadcast_avx2", "broadcast_avx512",
#     "vp2intersect_emulation", "conflict_intersect",
#     "croaring", "croaring_opt", "roaringrs",
#     "fesia16_sse_4.0", "fesia32_avx2_16.0", "fesia32_avx512_16.0",
#     "fesia_hash16_64.0",
# ]

# [[experiment]]
# name = "4set_vary_skew_small_scalar"
# title = "4-set same size scalar varying skew (small)"
# dataset = "4set_vary_skew_small"
# algorithm_set = "scalar_kset"
# 
# [[experiment]]
# name = "4set_vary_skew_small"
# title = "4-set same size vector varying skew (small)"
# dataset = "4set_vary_skew_small"
# algorithm_set = "vector_kset"
# 
# [[experiment]]
# name = "4set_vary_skew_large_scalar"
# title = "4-set same size scalar varying skew (large)"
# dataset = "4set_vary_skew_large"
# algorithm_set = "scalar_kset"
# 
# [[experiment]]
# name = "4set_vary_skew_large"
# title = "4-set same size vector varying skew (large)"
# dataset = "4set_vary_skew_large"
# algorithm_set = "vector_kset"

# Real datasets
[[experiment]]
name = "webdocs_scalar"
title = "WebDocs scalar"
dataset = "webdocs"
algorithm_set = "scalar_kset"

[[experiment]]
name = "webdocs_compare_small_adaptive"
title = "WebDocs Small Adaptive Comparison"
dataset = "webdocs"
algorithms = [
    "small_adaptive",
    "small_adaptive_sorted",
]

[[experiment]]
name = "webdocs_pc_sse"
title = "WebDocs PC SSE"
dataset = "webdocs"
algorithms = [
    "branchless_merge",
    "shuffling_sse",
    "broadcast_sse",
    "bmiss",
    "bmiss_sttni",
    "qfilter",
    "galloping", "galloping_sse",
    # Keep shuffling_sse and broadcast_sse for their consistent performance
]

[[experiment]]
name = "webdocs_pc_avx2"
title = "WebDocs PC AVX2"
dataset = "webdocs"
algorithms = [
    "branchless_merge",
    "shuffling_sse",
    "broadcast_sse",
    "shuffling_avx2",
    "broadcast_avx2_br",
    "galloping_avx2",
]

[[experiment]]
name = "webdocs_pc_others"
title = "WebDocs PC others"
dataset = "webdocs"
algorithms = [
    "branchless_merge",
    "shuffling_sse",
    "croaring", "croaring_opt",
    "fesia32_sse_16.0", "fesia32_avx2_16.0",
    "small_adaptive"
]

[[experiment]]
name = "webdocs_tods_sse"
title = "WebDocs TODS SSE"
dataset = "webdocs"
algorithms = [
    "branchless_merge",
    "shuffling_sse",
    "broadcast_sse_br",
    "bmiss_br",
    "bmiss_sttni_br",
    "qfilter",
    "galloping", "galloping_sse",
]

[[experiment]]
name = "webdocs_tods_avx2"
title = "WebDocs TODS AVX2"
dataset = "webdocs"
algorithms = [
    "branchless_merge",
    "broadcast_sse_br",
    "bmiss_br",
    "shuffling_avx2_br",
    "broadcast_avx2_br",
    "galloping_avx2",
]

[[experiment]]
name = "webdocs_tods_avx512"
title = "WebDocs TODS AVX-512"
dataset = "webdocs"
algorithms = [
    "branchless_merge",
    "broadcast_sse_br",
    "broadcast_avx2_br",
    "shuffling_avx512_br",
    "broadcast_avx512_br",
    "vp2intersect_emulation_br",
    "conflict_intersect_br",
    "galloping_avx512",
]

[[experiment]]
name = "webdocs_tods_others"
title = "WebDocs TODS others"
dataset = "webdocs"
algorithms = [
    "branchless_merge",
    "broadcast_sse_br",
    "broadcast_avx2_br",
    "small_adaptive",
    "croaring", "croaring_opt",
    "fesia32_sse_16.0", "fesia32_avx2_16.0", "fesia32_avx512_16.0",
]


[[experiment]]
name = "webdocs_array"
title = "WebDocs array-based"
dataset = "webdocs"
algorithms = [
    # "adaptive",
    "small_adaptive",
    "branchless_merge",
    "galloping", "galloping_sse", "galloping_avx2", "galloping_avx512",
    # "baezayates",

    "shuffling_sse", "shuffling_avx2", "shuffling_avx512",
    "broadcast_sse", "broadcast_avx2", "broadcast_avx512",
    "shuffling_sse_bsr", "shuffling_avx2_bsr", "shuffling_avx512_bsr",
    "broadcast_sse_bsr", "broadcast_avx2_bsr", "broadcast_avx512_bsr",
    "bmiss", "bmiss_sttni", 
    "qfilter",
    "vp2intersect_emulation", "conflict_intersect",
]


[[experiment]]
name = "webdocs_vector"
title = "WebDocs vector"
dataset = "webdocs"
algorithm_set = "vector_kset"

[[experiment]]
name = "census1881"
title = "Census1881 vector"
dataset = "census1881"
algorithm_set = "vector_kset"

[[experiment]]
name = "census-income"
title = "Census Income vector"
dataset = "census-income"
algorithm_set = "vector_kset"

[[experiment]]
name = "weather_sept_85"
title = "weather_sept_85 vector"
dataset = "weather_sept_85"
algorithm_set = "vector_kset"

[[experiment]]
name = "wikileaks-noquotes"
title = "WikiLeaks vector"
dataset = "wikileaks-noquotes"
algorithm_set = "vector_kset"

## DATASETS ##
# density     -- linear 0-1000 === 0-100%
# selectivity -- linear 0-1000 === 0-100%
# skewness_factor f -- exponential (k^f) for set k
# max_len         n -- exponential (2^n)

[[dataset]]
name = "2set_vary_selectivity"
type = "synthetic"
set_count = 2
gen_count = 30
vary = "selectivity"
selectivity = 0
to = 1000
step = 100
skewness_factor = 0 # 1:2^0 === 1:1
density = 1         # 0.1%
max_len = 20        # 2^20 ~ 1M

[[dataset]]
name = "2set_vary_size"
type = "synthetic"
set_count = 2
gen_count = 30
vary = "size"
max_len = 10        # 2^20 ~ 1M
to = 20
step = 1
selectivity = 10
skewness_factor = 0 # 1:2^0 === 1:1
density = 1         # 0.1%

[[dataset]]
name = "2set_vary_selectivity_low"
type = "synthetic"
set_count = 2
gen_count = 30
vary = "selectivity"
selectivity = 0
to = 300
step = 30
skewness_factor = 0 # 1:2^0 === 1:1
density = 1         # 0.1%
max_len = 20        # 2^20 ~ 1M

[[dataset]]
name = "2set_vary_selectivity_moderate_density"
type = "synthetic"
set_count = 2
gen_count = 30
vary = "selectivity"
selectivity = 0
to = 1000
step = 100
skewness_factor = 0 # 1:2^0 === 1:1
density = 10        # 1%
max_len = 20        # 2^20 ~ 1M

[[dataset]]
name = "2set_vary_density"
type = "synthetic"
set_count = 2
gen_count = 30
vary = "density"
density = 0
to = 1000
step = 100
skewness_factor = 0
selectivity = 30
max_len = 20

[[dataset]]
name = "2set_vary_skew"
type = "synthetic"
set_count = 2
gen_count = 30
vary = "skew"
skewness_factor = 0
to = 8000
step = 1000
density = 1
selectivity = 10
max_len = 20

[[dataset]]
name = "2set_vary_skew_md"
type = "synthetic"
set_count = 2
gen_count = 30
vary = "skew"
skewness_factor = 0
to = 8000
step = 1000
density = 10
selectivity = 10
max_len = 20

[[dataset]]
name = "2set_vary_density_skewed"
type = "synthetic"
set_count = 2
gen_count = 30
vary = "density"
density = 0
to = 1000
step = 100
skewness_factor = 8
selectivity = 30
max_len = 20

[[dataset]]
name = "2set_vary_size_moderate_density"
type = "synthetic"
set_count = 2
gen_count = 30
vary = "size"
max_len = 16        # 2^20 ~ 1M
to = 22
step = 1
skewness_factor = 0 # 1:2^0 === 1:1
selectivity = 10    # 1%
density = 10        # 1%

[[dataset]]
name = "kset_same_size"
type = "synthetic"
gen_count = 30
vary = "set_count"
set_count = 2
to = 8
step = 1
density = 1
selectivity = 10
skewness_factor = 0
max_len = 20

[[dataset]]
name = "4set_vary_skew_small"
type = "synthetic"
set_count = 4
gen_count = 30
vary = "skew"
skewness_factor = 0
to = 1000
step = 100
density = 1
selectivity = 10
max_len = 20

[[dataset]]
name = "4set_vary_skew_large"
type = "synthetic"
set_count = 4
gen_count = 30
vary = "skew"
skewness_factor = 0
to = 5000
step = 500
density = 1
selectivity = 10
max_len = 20

[[dataset]]
name = "fesia_vary_sel"
type = "synthetic"
set_count = 2
gen_count = 30
vary = "selectivity"
selectivity = 0
to = 500
step = 100
skewness_factor = 0
density = 1
max_len = 20

[[dataset]]
name = "webdocs"
type = "real"
source = "webdocs"
gen_count = 1024
set_count_start = 2
set_count_end = 8

[[dataset]]
name = "census1881"
type = "real"
source = "census1881"
gen_count = 1024
set_count_start = 2
set_count_end = 8

[[dataset]]
name = "census-income"
type = "real"
source = "census-income"
gen_count = 1024
set_count_start = 2
set_count_end = 8

[[dataset]]
name = "weather_sept_85"
type = "real"
source = "weather_sept_85"
gen_count = 1024
set_count_start = 2
set_count_end = 8

[[dataset]]
name = "wikileaks-noquotes"
type = "real"
source = "wikileaks-noquotes"
gen_count = 1024
set_count_start = 2
set_count_end = 8

# The sets in these datasets are too small.
[[dataset]]
name = "twitter"
type = "real"
source = "twitter"
gen_count = 1024
set_count_start = 2
set_count_end = 8

[[dataset]]
name = "as-skitter"
type = "real"
source = "as-skitter"
gen_count = 1024
set_count_start = 2
set_count_end = 8
